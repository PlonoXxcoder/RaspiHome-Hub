// --- FICHIER : templates/script.js ---
let chart;let allPlantRules={};let duePlantTipIndex=0;async function loadCurrentData(){const e={temp:document.querySelector("#weather-temp"),heat:document.querySelector("#weather-heat"),hum:document.querySelector("#weather-hum"),pres:document.querySelector("#weather-pres")};try{const t=await fetch("/alldata");if(!t.ok)throw new Error(t.status);const a=await t.json();e.temp.textContent=`${a.temperature}°C`,e.heat.textContent=`${a.heat_index}°C`,e.hum.textContent=`${a.humidite}%`,e.pres.textContent=`${a.pression} hPa`}catch(t){Object.values(e).forEach(e=>{e.textContent="Erreur"})}}async function updateChart(){try{const e=document.getElementById("period").value,t=await fetch(`/history?period=${e}`);if(!t.ok)throw new Error(t.status);const a=await t.json(),d=document.getElementById("myChart");chart&&chart.destroy(),chart=new Chart(d,{type:"line",data:{labels:a.datetime,datasets:[{label:"Température (°C)",data:a.temp,borderColor:"#ff6384",yAxisID:"y"},{label:"Ressentie (°C)",data:a.heat_index,borderColor:"#ff9f40",yAxisID:"y"},{label:"Humidité (%)",data:a.hum,borderColor:"#36a2eb",yAxisID:"y"},{label:"Pression (hPa)",data:a.pres,borderColor:"#4bc0c0",yAxisID:"y1"}]},options:{responsive:!0,interaction:{mode:"index",intersect:!1},elements:{point:{radius:0,hoverRadius:5}},scales:{y:{position:"left",title:{display:!0,text:"°C / %"}},y1:{position:"right",title:{display:!0,text:"hPa"},grid:{drawOnChartArea:!1}}}}})}catch(e){console.error(e)}}async function loadPlantData(){const e=new Set;try{const t=await fetch("/plants");if(!t.ok)throw new Error(`Erreur: ${t.status}`);const a=await t.json(),d=document.getElementById("plant-container");if(d.innerHTML="",0===Object.keys(a).length)d.innerHTML="<p>Aucune plante. Ajoutez-en une ci-dessous !</p>";else for(const o in a){const i=a[o];i.is_due&&e.add(i.type);const n=document.createElement("div");n.className=`plant ${i.is_due?"due":""}`;const c=i.type.charAt(0).toUpperCase()+i.type.slice(1);let l=`<div class="plant-header"><h3><i class="fa-solid fa-leaf"></i> ${i.nom}</h3><button class="delete-btn" onclick="deletePlant('${o}', '${i.nom}')" title="Supprimer ${i.nom}"><i class="fa-solid fa-trash"></i></button></div><div class="plant-body"><span class="plant-type-tag" onclick="showTipsFor('${i.type}')">${c}</span><p>Prochain arrosage : <strong>${i.status}</strong></p>${i.is_due?`<button onclick="confirmWatering('${o}')">Marquer comme arrosé</button>`:""}</div>`;n.innerHTML=l,d.appendChild(n)}}catch(t){document.getElementById("plant-container").innerHTML="<p>Impossible de charger les données des plantes.</p>"}return Array.from(e)}async function deletePlant(e,t){if(!confirm(`Êtes-vous sûr de vouloir supprimer la plante "${t}" ? Cette action est irréversible.`))return;try{const a=await fetch(`/delete_plant/${e}`,{method:"POST"});if(!a.ok)throw new Error("La suppression a échoué sur le serveur.");loadPlantData()}catch(e){alert("Une erreur est survenue. Impossible de supprimer la plante.")}}async function showTipsFor(e){const t=document.getElementById("tips-modal"),a=document.getElementById("modal-title"),d=document.getElementById("modal-tips-list"),o=e.charAt(0).toUpperCase()+e.slice(1);a.textContent=`Conseils pour ${o}`,d.innerHTML="<li>Chargement...</li>",t.style.display="flex";try{const i=Array(5).fill().map(()=>fetch(`/tip_for_type/${e}`)),n=await Promise.all(i),c=await Promise.all(n.map(e=>e.json())),l=new Set(c.map(e=>e.tip));if(d.innerHTML="",l.size>0)l.forEach(e=>{const t=document.createElement("li");t.textContent=e,d.appendChild(t)});else d.innerHTML="<li>Aucun conseil spécifique trouvé.</li>"}catch(e){d.innerHTML="<li>Impossible de charger les conseils.</li>"}}async function confirmWatering(e){try{await fetch(`/watered/${e}`,{method:"POST"});const t=await loadPlantData();await updateSmartTip(t)}catch(e){console.error(e)}}async function updateSmartTip(e=[]){const t=document.getElementById("plant-tip");if(!t)return;let a="/tips";if(e.length>0){const d=e[duePlantTipIndex];a=`/tip_for_type/${d}`,duePlantTipIndex=(duePlantTipIndex+1)%e.length}try{t.classList.add("fade-out");const o=await fetch(a);if(!o.ok)throw new Error("!");const i=await o.json();setTimeout(()=>{t.innerHTML=`<strong>${i.category}:</strong> ${i.tip}`,t.classList.remove("fade-out")},500)}catch(e){t.textContent="Impossible de charger les astuces.",t.classList.remove("fade-out")}}async function loadPlantRules(){try{const e=await fetch("/plant_rules");if(!e.ok)throw new Error("!");allPlantRules=await e.json()}catch(e){console.error(e)}}async function populatePlantTypes(){try{const e=await fetch("/plant_types");if(!e.ok)throw new Error("!");const t=await e.json(),a=document.getElementById("plant-type"),d=document.getElementById("plant-type-list");a.innerHTML='<option value="">-- Choisir --</option>',d.innerHTML="",t.forEach(e=>{const t=e.charAt(0).toUpperCase()+e.slice(1),o=document.createElement("option");o.value=e,o.textContent=t,a.appendChild(o);const i=document.createElement("option");i.value=t,d.appendChild(i)})}catch(e){console.error(e)}}async function handleAddPlant(e){e.preventDefault();const t=document.getElementById("plant-name"),a=document.getElementById("plant-type");try{const d=await fetch("/add_plant",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({nom:t.value,type:a.value})}),o=await d.json();if(!d.ok)throw new Error(o.message||"!");t.value="",a.selectedIndex=0,loadPlantData()}catch(e){alert(`Erreur: ${e.message}`)}}async function handleManagePlantType(e){e.preventDefault();const t=document.getElementById("type-search-name"),a=document.getElementById("summer-weeks"),d=document.getElementById("winter-weeks"),o={type_name:t.value,summer_weeks:a.value,winter_weeks:d.value};try{const i=await fetch("/add_plant_type",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}),n=await i.json();if(!i.ok)throw new Error(n.message||"!");t.value="",a.value="",d.value="",await Promise.all([populatePlantTypes(),loadPlantRules()]),alert(`Type "${o.type_name}" sauvegardé!`)}catch(e){console.error(e),alert(`Erreur: ${e.message}`)}}document.addEventListener("DOMContentLoaded",async()=>{const e=document.getElementById("theme-switcher"),t=document.body,a=e=>t.classList.toggle("dark-mode",e==="dark");e.addEventListener("click",()=>{const e=t.classList.contains("dark-mode")?"light":"dark";a(e),localStorage.setItem("theme",e)});const d=localStorage.getItem("theme"),o=window.matchMedia("(prefers-color-scheme: dark)").matches;a(d||(o?"dark":"light"));const i=document.getElementById("tips-modal"),n=document.getElementById("modal-close-btn");n.addEventListener("click",()=>i.style.display="none"),i.addEventListener("click",e=>{e.target===i&&(i.style.display="none")});const c=document.getElementById("refresh-weather-btn");c.addEventListener("click",async()=>{c.disabled=!0,c.classList.add("loading"),await loadCurrentData(),setTimeout(()=>{c.classList.remove("loading"),c.disabled=!1},500)}),await loadPlantRules(),loadCurrentData(),updateChart(),populatePlantTypes();const l=async()=>{const e=await loadPlantData();await updateSmartTip(e)};l(),setInterval(l,15e3),setInterval(loadCurrentData,6e4),document.getElementById("period").addEventListener("change",updateChart),document.getElementById("add-plant-form").addEventListener("submit",handleAddPlant),document.getElementById("manage-type-form").addEventListener("submit",handleManagePlantType);const r=document.getElementById("type-search-name"),s=document.getElementById("manage-type-btn"),m=document.getElementById("summer-weeks"),p=document.getElementById("winter-weeks");r.addEventListener("input",e=>{const t=e.target.value.toLowerCase().trim().replace(/ /g,"_"),a=allPlantRules[t];a?(m.value=a[0],p.value=a[1],s.textContent="Modifier",s.style.backgroundColor="#ffc107"):(m.value="",p.value="",s.textContent="Créer",s.style.backgroundColor="#6c757d")})});
